{"version":3,"file":"RadioSet.stories-8fc395d1.js","sources":["../../RadioSet/RadioSet.tsx"],"sourcesContent":["import classNames from \"classnames\";\r\nimport * as React from \"react\";\r\nimport styles from \"./RadioSet.module.scss\";\r\nimport { Radio } from \"../Radio/Radio\";\r\n\r\nexport interface RadioSetProps\r\n  extends React.ComponentPropsWithoutRef<\"ul\"> {\r\n  /**\r\n   * The Radios in the Radios Set\r\n   */\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * @public\r\n *\r\n * @description\r\n *\r\n * The Radio Set is a set of options, as Radios, for the user.\r\n */\r\nexport const RadioSet: React.FC<RadioSetProps> = (props) => {\r\n  const { children, className, ...rest } = props;\r\n\r\n  return (\r\n    <ul\r\n      className={classNames(styles.radioSet, className)}\r\n      role=\"list\"\r\n      {...rest}\r\n    >\r\n      {React.Children.map(children, (radio, index) => {\r\n        if ((radio as React.ReactElement).type === Radio) {\r\n          return (\r\n            <li\r\n              className={styles.radioSetItem}\r\n              key={index}\r\n              role=\"listitem\"\r\n            >\r\n              {radio}\r\n            </li>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nRadioSet.displayName = \"RadioSet\";\r\n"],"names":["RadioSet","props","children","className","rest","jsx","classNames","styles","radio","index","Radio"],"mappings":"scAoBaA,EAAqCC,GAAU,CAC1D,KAAM,CAAE,SAAAC,EAAU,UAAAC,EAAW,GAAGC,GAASH,EAGvC,OAAAI,EAAC,KAAA,CACC,UAAWC,EAAWC,EAAO,SAAUJ,CAAS,EAChD,KAAK,OACJ,GAAGC,EAEH,WAAe,SAAA,IAAIF,EAAU,CAACM,EAAOC,IAC/BD,EAA6B,OAASE,EAEvCL,EAAC,KAAA,CACC,UAAWE,EAAO,aAElB,KAAK,WAEJ,SAAAC,CAAA,EAHIC,CAAA,EAOF,IAEV,CAAA,CAAA,CAGP,EAEAT,EAAS,YAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}