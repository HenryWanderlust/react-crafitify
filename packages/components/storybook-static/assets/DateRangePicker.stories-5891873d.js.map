{"version":3,"file":"DateRangePicker.stories-5891873d.js","sources":["../../DateRangePicker/BaseDateRangePickerCalendars.tsx","../../DateRangePicker/DateRangePickerCalendars.tsx","../../DateRangePicker/DateRangePickerContext.tsx","../../DateRangePicker/DateRangePicker.tsx"],"sourcesContent":["/* istanbul ignore file */\r\nimport * as React from \"react\";\r\nimport styles from \"./BaseDateRangePickerCalendars.module.scss\";\r\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\";\r\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\r\nimport {\r\n  TfiAngleLeft,\r\n  TfiAngleRight,\r\n  TfiAngleDoubleRight,\r\n  TfiAngleDoubleLeft,\r\n} from \"react-icons/tfi\";\r\nimport { IconButton } from \"../IconButton/IconButton\";\r\n//import { DateRangePickerContext } from \"./DateRangePickerContext\";\r\n\r\nexport interface BaseDateRangePickerCalendarsProps {\r\n  /**\r\n   * The callback fired when the DatePickerCalendar requests to close\r\n   */\r\n  onClose: () => void;\r\n  /**\r\n   * The trigger ref for the DatePicker\r\n   */\r\n  triggerRefs: React.RefObject<HTMLDivElement>[];\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const BaseDateRangePickerCalendars: React.FC<BaseDateRangePickerCalendarsProps> =\r\n  (props) => {\r\n    const { onClose, triggerRefs } = props;\r\n\r\n    // const { selectedDate, setSelectedDate } = React.useContext(\r\n    //   DateRangePickerContext\r\n    // );\r\n\r\n    const [date, setDate] = React.useState<Date>(new Date());\r\n\r\n    const calendarsRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    useOnClickOutside([calendarsRef, ...triggerRefs], () =>\r\n      onClose()\r\n    );\r\n\r\n    const increaseMonth = () => {\r\n      setDate(\r\n        new Date(\r\n          date.getFullYear(),\r\n          date.getMonth() + 1,\r\n          date.getDate()\r\n        )\r\n      );\r\n    };\r\n\r\n    const increaseYear = () => {\r\n      setDate(\r\n        new Date(\r\n          date.getFullYear() + 1,\r\n          date.getMonth(),\r\n          date.getDate()\r\n        )\r\n      );\r\n    };\r\n\r\n    const decreaseMonth = () => {\r\n      setDate(\r\n        new Date(\r\n          date.getFullYear(),\r\n          date.getMonth() - 1,\r\n          date.getDate()\r\n        )\r\n      );\r\n    };\r\n\r\n    const decreaseYear = () => {\r\n      setDate(\r\n        new Date(\r\n          date.getFullYear() - 1,\r\n          date.getMonth(),\r\n          date.getDate()\r\n        )\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={styles.dateRangePickerCalendarsContainer}\r\n        ref={calendarsRef}\r\n      >\r\n        <FocusTrap>\r\n          <div\r\n            className={\r\n              styles.dateRangePickerCalendarNavigationContainer\r\n            }\r\n          >\r\n            <div style={{ display: \"flex\", gap: \"2px\" }}>\r\n              <IconButton\r\n                className={\r\n                  styles.dateRangePickerCalendarNavigationIcon\r\n                }\r\n                content={<TfiAngleDoubleLeft />}\r\n                size=\"medium\"\r\n                onClick={decreaseYear}\r\n              />\r\n              <IconButton\r\n                className={\r\n                  styles.dateRangePickerCalendarNavigationIcon\r\n                }\r\n                content={<TfiAngleLeft />}\r\n                size=\"medium\"\r\n                onClick={decreaseMonth}\r\n              />\r\n            </div>\r\n            <div\r\n              className={\r\n                styles.dateRangePickerCalendarNavigationMonth\r\n              }\r\n            >\r\n              {`${date.toLocaleString(\"en-US\", {\r\n                month: \"long\",\r\n              })} ${date.getFullYear()}`}\r\n            </div>\r\n            <div\r\n              className={\r\n                styles.dateRangePickerCalendarNavigationMonth\r\n              }\r\n            >\r\n              {`${date.toLocaleString(\"en-US\", {\r\n                month: \"long\",\r\n              })} ${date.getFullYear()}`}\r\n            </div>\r\n            <div style={{ display: \"flex\", gap: \"2px\" }}>\r\n              <IconButton\r\n                className={\r\n                  styles.dateRangePickerCalendarNavigationIcon\r\n                }\r\n                content={<TfiAngleRight />}\r\n                size=\"medium\"\r\n                onClick={increaseMonth}\r\n              />\r\n              <IconButton\r\n                className={\r\n                  styles.dateRangePickerCalendarNavigationIcon\r\n                }\r\n                content={<TfiAngleDoubleRight />}\r\n                size=\"medium\"\r\n                onClick={increaseYear}\r\n              />\r\n            </div>\r\n          </div>\r\n        </FocusTrap>\r\n      </div>\r\n    );\r\n  };\r\n\r\nBaseDateRangePickerCalendars.displayName =\r\n  \"BaseDateRangePickerCalendars\";\r\n","/* istanbul ignore file */\r\nimport * as React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { BaseDateRangePickerCalendars } from \"./BaseDateRangePickerCalendars\";\r\nimport styles from \"./DateRangePickerCalendars.module.scss\";\r\n\r\nexport interface DateRangePickerCalendarsProps {\r\n  /**\r\n   * If the DateRangePickerCalendars is open\r\n   */\r\n  isOpen: boolean;\r\n  /**\r\n   * The callback fired when the DateRangePickerCalendars requests to close\r\n   */\r\n  onClose: () => void;\r\n  /**\r\n   * The refs for both triggers of the DateRangePicke\r\n   */\r\n  triggerRefs: React.RefObject<HTMLDivElement>[];\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const DateRangePickerCalendars: React.FC<DateRangePickerCalendarsProps> =\r\n  (props) => {\r\n    const { isOpen, onClose, triggerRefs } = props;\r\n\r\n    return (\r\n      <CSSTransition\r\n        in={isOpen}\r\n        timeout={200}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        classNames={{\r\n          enter: styles.enter,\r\n          enterActive: styles.enterActive,\r\n          exit: styles.exit,\r\n          exitActive: styles.exitActive,\r\n        }}\r\n      >\r\n        <BaseDateRangePickerCalendars\r\n          onClose={onClose}\r\n          triggerRefs={triggerRefs}\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\nDateRangePickerCalendars.displayName = \"DateRangePickerCalendars\";\r\n","/* istanbul ignore file */\r\nimport * as React from \"react\";\r\n\r\nexport interface DaterRangePickerContext {\r\n  selectedDate: Date | undefined;\r\n  setSelectedDate: React.Dispatch<\r\n    React.SetStateAction<Date | undefined>\r\n  >;\r\n}\r\n\r\nexport const DateRangePickerContext =\r\n  React.createContext<DaterRangePickerContext>({\r\n    selectedDate: undefined,\r\n    setSelectedDate: () => undefined,\r\n  });\r\n","/* istanbul ignore file */\r\nimport * as React from \"react\";\r\nimport { AiFillCalendar } from \"react-icons/ai\";\r\nimport { TextField } from \"../TextField\";\r\nimport styles from \"./DateRangePicker.module.scss\";\r\nimport { DateRangePickerCalendars } from \"./DateRangePickerCalendars\";\r\nimport { DateRangePickerContext } from \"./DateRangePickerContext\";\r\n\r\nexport interface DateRangePickerProps {\r\n  /**\r\n   * The initial selected date for the DateRangePicker\r\n   */\r\n  selected?: Date;\r\n}\r\n\r\n/**\r\n * @public\r\n *\r\n * @description\r\n *\r\n * The Date Range Picker component allows a user to select a range of dates.\r\n */\r\nexport const DateRangePicker: React.FC<DateRangePickerProps> = (\r\n  props\r\n) => {\r\n  const { selected } = props;\r\n\r\n  const startTriggerRef = React.useRef<HTMLDivElement>(null);\r\n  const endTriggerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const [selectedDate, setSelectedDate] =\r\n    React.useState<Date | undefined>(selected);\r\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <DateRangePickerContext.Provider\r\n      value={{\r\n        selectedDate: selectedDate,\r\n        setSelectedDate: setSelectedDate,\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\" }}>\r\n        <TextField\r\n          className={styles.customInput}\r\n          onChange={() => undefined}\r\n          label=\"Start Date\"\r\n          trailingIcon={\r\n            <div\r\n              style={{ maxWidth: \"34px\", maxHeight: \"34px\" }}\r\n              ref={startTriggerRef}\r\n            >\r\n              <AiFillCalendar\r\n                className={styles.datePickerIconContainer}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                onKeyDown={(event) => {\r\n                  if (event.code === \"Enter\") {\r\n                    setIsOpen(!isOpen);\r\n                  }\r\n                }}\r\n                size={21}\r\n                tabIndex={0}\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n        <TextField\r\n          className={styles.customInput}\r\n          onChange={() => undefined}\r\n          label=\"End Date\"\r\n          trailingIcon={\r\n            <div\r\n              style={{ maxWidth: \"34px\", maxHeight: \"34px\" }}\r\n              ref={endTriggerRef}\r\n            >\r\n              <AiFillCalendar\r\n                className={styles.datePickerIconContainer}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                onKeyDown={(event) => {\r\n                  if (event.code === \"Enter\") {\r\n                    setIsOpen(!isOpen);\r\n                  }\r\n                }}\r\n                size={21}\r\n                tabIndex={0}\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n      <DateRangePickerCalendars\r\n        isOpen={isOpen}\r\n        onClose={() => setIsOpen(false)}\r\n        triggerRefs={[startTriggerRef, endTriggerRef]}\r\n      />\r\n    </DateRangePickerContext.Provider>\r\n  );\r\n};\r\n\r\nDateRangePicker.displayName = \"DateRangePicker\";\r\n"],"names":["BaseDateRangePickerCalendars","props","onClose","triggerRefs","date","setDate","React.useState","calendarsRef","React.useRef","useOnClickOutside","increaseMonth","increaseYear","decreaseMonth","decreaseYear","jsx","styles","FocusTrap","jsxs","IconButton","TfiAngleDoubleLeft","TfiAngleLeft","TfiAngleRight","TfiAngleDoubleRight","DateRangePickerCalendars","isOpen","CSSTransition","DateRangePickerContext","React.createContext","DateRangePicker","selected","startTriggerRef","endTriggerRef","selectedDate","setSelectedDate","setIsOpen","TextField","AiFillCalendar","event"],"mappings":"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"}