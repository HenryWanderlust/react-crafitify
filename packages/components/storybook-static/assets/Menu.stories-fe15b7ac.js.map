{"version":3,"file":"Menu.stories-fe15b7ac.js","sources":["../../hooks/useMenuFocus.tsx","../../Menu/BaseMenu.tsx","../../utility/getMenuAlignmentStyle.tsx","../../Menu/MenuLayoutContainer.tsx","../../Menu/Menu.tsx","../../Menu/MenuSeparator.tsx","../../Menu/MenuHeader.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { MenuItem } from \"../Menu/MenuItem\";\r\n\r\nconst getNextMenuItem = (\r\n  currentIndex: number,\r\n  childrenArray: React.ReactNode[]\r\n) => {\r\n  let index =\r\n    currentIndex + 1 > childrenArray.length - 1\r\n      ? 0\r\n      : currentIndex + 1;\r\n  while (\r\n    (childrenArray[index] as React.ReactElement).type !== MenuItem\r\n  ) {\r\n    if (index + 1 > childrenArray.length - 1) {\r\n      index = 0;\r\n    } else {\r\n      index += 1;\r\n    }\r\n  }\r\n\r\n  return index;\r\n};\r\n\r\nconst getPreviousMenuItem = (\r\n  currentIndex: number,\r\n  childrenArray: React.ReactNode[]\r\n) => {\r\n  let index =\r\n    currentIndex - 1 < 0\r\n      ? childrenArray.length - 1\r\n      : currentIndex - 1;\r\n  while (\r\n    (childrenArray[index] as React.ReactElement).type !== MenuItem\r\n  ) {\r\n    if (index - 1 < 0) {\r\n      index = childrenArray.length - 1;\r\n    } else {\r\n      index -= 1;\r\n    }\r\n  }\r\n\r\n  return index;\r\n};\r\n\r\n// Possible bug where no children will cause infinite loop??\r\nexport const useMenuFocus = (\r\n  children: React.ReactNode,\r\n  menuContainerRef: React.RefObject<HTMLElement>\r\n) => {\r\n  const childrenArray = React.Children.toArray(children);\r\n\r\n  const [focusedMenuItemIndex, setFocusedMenuItemIndex] =\r\n    React.useState<number>(getNextMenuItem(-1, childrenArray));\r\n\r\n  const focusNextItem = () => {\r\n    setFocusedMenuItemIndex((prevIndex) =>\r\n      getNextMenuItem(prevIndex, childrenArray)\r\n    );\r\n  };\r\n\r\n  const focusPreviousItem = () => {\r\n    setFocusedMenuItemIndex((prevIndex) =>\r\n      getPreviousMenuItem(prevIndex, childrenArray)\r\n    );\r\n  };\r\n\r\n  // Initial render focus on first item\r\n  React.useEffect(() => {\r\n    const menuItem = menuContainerRef.current?.children[\r\n      focusedMenuItemIndex\r\n    ] as HTMLElement;\r\n    setTimeout(() => menuItem?.focus(), 120);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const menuItem = menuContainerRef.current?.children[\r\n      focusedMenuItemIndex\r\n    ] as HTMLElement;\r\n    menuItem?.focus();\r\n  }, [focusedMenuItemIndex]);\r\n\r\n  return { focusNextItem, focusPreviousItem, focusedMenuItemIndex };\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  useMenuFocus,\r\n  useOnClickOutside,\r\n  useOnKeyDown,\r\n} from \"../hooks\";\r\nimport styles from \"./BaseMenu.module.scss\";\r\n\r\nexport type BaseMenuAlignment =\r\n  | \"bottomLeft\"\r\n  | \"bottomCenter\"\r\n  | \"bottomRight\"\r\n  | \"topLeft\"\r\n  | \"topCenter\"\r\n  | \"topRight\";\r\n\r\nexport interface BaseMenuProps\r\n  extends React.ComponentPropsWithoutRef<\"div\"> {\r\n  /**\r\n   * The content for the Menu\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * The callback fired when the Menu closes\r\n   */\r\n  onClose: (itemValue?: string) => void;\r\n  /**\r\n   * The trigger ref for the Menu\r\n   */\r\n  triggerRef: React.RefObject<HTMLElement>;\r\n}\r\n\r\nexport const BaseMenu = React.forwardRef<\r\n  HTMLDivElement,\r\n  BaseMenuProps\r\n>((props, ref) => {\r\n  const { children, onClose, triggerRef } = props;\r\n\r\n  const menuContainerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const { focusNextItem, focusPreviousItem, focusedMenuItemIndex } =\r\n    useMenuFocus(children, menuContainerRef);\r\n\r\n  useOnClickOutside([menuContainerRef, triggerRef], onClose);\r\n  useOnKeyDown([\"Escape\"], () => {\r\n    onClose();\r\n    triggerRef.current?.focus();\r\n  });\r\n\r\n  return (\r\n    <div className={styles.baseMenu} ref={ref}>\r\n      <div ref={menuContainerRef} role=\"menu\">\r\n        {React.Children.map(children, (child, index) => {\r\n          const menuItem = child as React.ReactElement;\r\n          return React.cloneElement(menuItem, {\r\n            key: index,\r\n            onClick: onClose,\r\n            onKeyDown: (event: React.KeyboardEvent<HTMLElement>) => {\r\n              if (event.code === \"Space\") {\r\n                onClose();\r\n                triggerRef.current?.focus();\r\n              }\r\n              if (event.code === \"ArrowUp\") {\r\n                focusPreviousItem();\r\n              }\r\n              if (event.code === \"ArrowDown\") {\r\n                focusNextItem();\r\n              }\r\n            },\r\n            tabIndex: index === focusedMenuItemIndex ? 0 : undefined,\r\n          });\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nBaseMenu.displayName = \"BaseMenu\";\r\n","import { BaseMenuAlignment } from \"../components/Menu/BaseMenu\";\r\nimport { getLayoutStyle } from \"./getLayoutStyle\";\r\n\r\nexport const getMenuAlignmentStyle = ({\r\n  alignment,\r\n  referrerRef,\r\n  targetRef,\r\n}: {\r\n  alignment: BaseMenuAlignment;\r\n  referrerRef: React.RefObject<HTMLElement>;\r\n  targetRef: React.RefObject<HTMLElement>;\r\n}) =>\r\n  getLayoutStyle({\r\n    calculateLayout({\r\n      referrerHeight,\r\n      referrerWidth,\r\n      targetHeight,\r\n      targetWidth,\r\n    }) {\r\n      const left =\r\n        alignment === \"topLeft\" || alignment === \"bottomLeft\"\r\n          ? 0\r\n          : alignment === \"topCenter\" || alignment === \"bottomCenter\"\r\n          ? (targetWidth - referrerWidth) / 2\r\n          : targetWidth - referrerWidth;\r\n\r\n      const top = alignment.startsWith(\"bottom\")\r\n        ? targetHeight + 2\r\n        : -referrerHeight - 2;\r\n\r\n      return { left, top };\r\n    },\r\n    referrerRef,\r\n    targetRef,\r\n  });\r\n","import * as React from \"react\";\r\nimport styles from \"./MenuLayoutContainer.module.scss\";\r\nimport { getMenuAlignmentStyle } from \"../utility/getMenuAlignmentStyle\";\r\nimport { BaseMenuAlignment } from \"./BaseMenu\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface MenuLayoutContainerProps\r\n  extends React.ComponentPropsWithoutRef<\"div\"> {\r\n  /**\r\n   * The alignment for the Menu\r\n   */\r\n  alignment: BaseMenuAlignment;\r\n  /**\r\n   * The trigger ref for the Menu\r\n   */\r\n  triggerRef: React.RefObject<HTMLElement>;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const MenuLayoutContainer: React.FC<MenuLayoutContainerProps> =\r\n  (props) => {\r\n    const { alignment, className, triggerRef, ...rest } = props;\r\n\r\n    const [rootStyle, setRootStyle] =\r\n      React.useState<React.CSSProperties>({ visibility: \"hidden\" });\r\n\r\n    const referrerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    React.useEffect(() => {\r\n      setRootStyle(\r\n        getMenuAlignmentStyle({\r\n          alignment,\r\n          referrerRef,\r\n          targetRef: triggerRef,\r\n        })\r\n      );\r\n    }, [alignment, referrerRef, triggerRef]);\r\n\r\n    return (\r\n      <div\r\n        className={classNames(\r\n          className,\r\n          alignment.startsWith(\"bottom\") && styles.bottom,\r\n          alignment.startsWith(\"top\") && styles.top,\r\n          styles.layoutContainer\r\n        )}\r\n        ref={referrerRef}\r\n        style={rootStyle}\r\n        {...rest}\r\n      />\r\n    );\r\n  };\r\n\r\nMenuLayoutContainer.displayName = \"MenuLayoutContainer\";\r\n","import * as React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Menu.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport { BaseMenu } from \"./BaseMenu\";\r\nimport { MenuLayoutContainer } from \"./MenuLayoutContainer\";\r\n\r\nexport type MenuAlignment =\r\n  | \"bottomLeft\"\r\n  | \"bottomCenter\"\r\n  | \"bottomRight\"\r\n  | \"topLeft\"\r\n  | \"topCenter\"\r\n  | \"topRight\";\r\n\r\nexport interface MenuProps {\r\n  /**\r\n   * The Menu's alignment relative to its trigger\r\n   *\r\n   * @default \"bottomLeft\"\r\n   */\r\n  alignment?: MenuAlignment;\r\n  /**\r\n   * The content for the Menu\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * If the Menu is open\r\n   *\r\n   * @default false\r\n   */\r\n  isOpen?: boolean;\r\n  /**\r\n   * The callback fired when the Menu closes\r\n   */\r\n  onClose: (itemValue?: string) => void;\r\n  /**\r\n   * The callback fired when the Menu opens\r\n   */\r\n  onOpen: () => void;\r\n  /**\r\n   * The trigger for the Menu\r\n   */\r\n  trigger: React.ReactElement;\r\n}\r\n\r\n/**\r\n * @public\r\n *\r\n * @description\r\n *\r\n * The Menu component will display a list of items to a user.\r\n */\r\nexport const Menu: React.FC<MenuProps> = (props) => {\r\n  const {\r\n    alignment = \"bottomLeft\",\r\n    children,\r\n    isOpen = false,\r\n    onClose,\r\n    onOpen,\r\n    trigger,\r\n    ...rest\r\n  } = props;\r\n\r\n  const menuRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const triggerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  return (\r\n    <span\r\n      className={classNames(\r\n        alignment.startsWith(\"bottom\") && styles.bottom,\r\n        alignment.startsWith(\"top\") && styles.top,\r\n        styles.container\r\n      )}\r\n      {...rest}\r\n    >\r\n      {React.cloneElement(trigger, {\r\n        className: classNames(\r\n          isOpen && styles.isOpen,\r\n          styles.trigger\r\n        ),\r\n        onClick: () => {\r\n          if (isOpen) {\r\n            onClose();\r\n          } else {\r\n            onOpen();\r\n          }\r\n        },\r\n        ref: triggerRef,\r\n        role: \"button\",\r\n        tabIndex: 0,\r\n      })}\r\n      <CSSTransition\r\n        classNames={{\r\n          enter: styles.enter,\r\n          enterActive: styles.enterActive,\r\n          exit: styles.exit,\r\n          exitActive: styles.exitActive,\r\n        }}\r\n        in={isOpen}\r\n        mountOnEnter\r\n        nodeRef={menuRef}\r\n        timeout={150}\r\n        unmountOnExit\r\n      >\r\n        <MenuLayoutContainer\r\n          alignment={alignment}\r\n          triggerRef={triggerRef}\r\n        >\r\n          <BaseMenu\r\n            onClose={onClose}\r\n            ref={menuRef}\r\n            triggerRef={triggerRef}\r\n          >\r\n            {children}\r\n          </BaseMenu>\r\n        </MenuLayoutContainer>\r\n      </CSSTransition>\r\n    </span>\r\n  );\r\n};\r\n\r\nMenu.displayName = \"Menu\";\r\n","import classNames from \"classnames\";\r\nimport * as React from \"react\";\r\nimport { Separator } from \"../Separator/Separator\";\r\nimport styles from \"./MenuSeparator.module.scss\";\r\n\r\nexport interface MenuSeparatorProps\r\n  extends React.ComponentPropsWithoutRef<\"span\"> {\r\n  /**\r\n   * The accessible label for the Menu Separator\r\n   */\r\n  ariaLabel?: string;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const MenuSeparator: React.FC<MenuSeparatorProps> = (\r\n  props\r\n) => {\r\n  const { ariaLabel, className, ...rest } = props;\r\n  return (\r\n    <Separator\r\n      ariaLabel={ariaLabel}\r\n      className={classNames(className, styles.menuSeparator)}\r\n      direction=\"horizontal\"\r\n      stroke={1}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nMenuSeparator.displayName = \"MenuSeparator\";\r\n","import classNames from \"classnames\";\r\nimport * as React from \"react\";\r\nimport { Typography } from \"../Typography/Typography\";\r\nimport styles from \"./MenuHeader.module.scss\";\r\n\r\nexport interface MenuHeaderProps\r\n  extends React.ComponentPropsWithoutRef<\"div\"> {\r\n  /**\r\n   * The content for the MenuHeader\r\n   */\r\n  children: string;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const MenuHeader: React.FC<MenuHeaderProps> = (props) => {\r\n  const { children, className, ...rest } = props;\r\n  return (\r\n    <Typography\r\n      className={classNames(styles.menuHeader, className)}\r\n      role=\"presentation\"\r\n      type=\"h3\"\r\n      variant=\"primary\"\r\n      {...rest}\r\n    >\r\n      {children.toUpperCase()}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nMenuHeader.displayName = \"MenuHeader\";\r\n"],"names":["getNextMenuItem","currentIndex","childrenArray","index","MenuItem","getPreviousMenuItem","useMenuFocus","children","menuContainerRef","React.Children","focusedMenuItemIndex","setFocusedMenuItemIndex","React.useState","focusNextItem","prevIndex","focusPreviousItem","React.useEffect","menuItem","_a","BaseMenu","React.forwardRef","props","ref","onClose","triggerRef","React.useRef","useOnClickOutside","useOnKeyDown","styles","child","React.cloneElement","event","getMenuAlignmentStyle","alignment","referrerRef","targetRef","getLayoutStyle","referrerHeight","referrerWidth","targetHeight","targetWidth","left","top","MenuLayoutContainer","className","rest","rootStyle","setRootStyle","jsx","classNames","Menu","isOpen","onOpen","trigger","menuRef","jsxs","CSSTransition","MenuSeparator","ariaLabel","Separator","MenuHeader","Typography"],"mappings":"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"}