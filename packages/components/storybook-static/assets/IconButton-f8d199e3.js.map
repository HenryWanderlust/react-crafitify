{"version":3,"file":"IconButton-f8d199e3.js","sources":["../../IconButton/IconButton.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport styles from \"./IconButton.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport { Ripple } from \"../Ripple\";\r\n\r\nexport type IconButtonSize = \"small\" | \"medium\" | \"large\";\r\nexport type IconButtonVariant = \"primary\" | \"secondary\";\r\n\r\nexport interface IconButtonProps\r\n  extends React.ComponentPropsWithRef<\"button\"> {\r\n  /**\r\n   * The accessibile label for the Icon Button\r\n   *\r\n   * @default \"Icon Button\"\r\n   */\r\n  ariaLabel?: string;\r\n  /**\r\n   * The content for the Icon Button\r\n   *\r\n   * @note Children must be short strings\r\n   */\r\n  children?: React.ReactNode;\r\n  /**\r\n   * The content for the Icon Button\r\n   *\r\n   * @note Content must be icons from \"react-icons\"\r\n   */\r\n  content?: React.ReactElement;\r\n  /**\r\n   * If the Icon Button is disabled\r\n   *\r\n   * @default false\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * The size for the Icon Button\r\n   *\r\n   * @default \"medium\"\r\n   */\r\n  size?: IconButtonSize;\r\n  /**\r\n   * The variant for the Icon Button\r\n   *\r\n   * @default \"primary\"\r\n   */\r\n  variant?: IconButtonVariant;\r\n}\r\n\r\n/**\r\n * @public\r\n *\r\n * @description\r\n *\r\n * The Icon Button component displays an icon and\r\n * allows a user to take an action.\r\n */\r\nexport const IconButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  IconButtonProps\r\n>((props, ref) => {\r\n  const {\r\n    ariaLabel = \"Icon Button\",\r\n    children,\r\n    className,\r\n    content,\r\n    disabled = false,\r\n    size = \"medium\",\r\n    variant = \"primary\",\r\n    ...rest\r\n  } = props;\r\n\r\n  const iconSizeNumber =\r\n    size === \"medium\" ? 22 : size === \"small\" ? 18 : 26;\r\n\r\n  return (\r\n    <button\r\n      aria-label={ariaLabel}\r\n      className={classNames(\r\n        className,\r\n        children && styles.children,\r\n        disabled && styles.disabled,\r\n        styles.iconButton,\r\n        size === \"small\" && styles.small,\r\n        size === \"medium\" && styles.medium,\r\n        size === \"large\" && styles.large,\r\n        variant === \"primary\" && styles.primary,\r\n        variant === \"secondary\" && styles.secondary\r\n      )}\r\n      disabled={disabled}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {!disabled && <Ripple duration={1000} position=\"center\" />}\r\n      {content\r\n        ? React.cloneElement(content, {\r\n            size: iconSizeNumber,\r\n          })\r\n        : children}\r\n    </button>\r\n  );\r\n});\r\n\r\nIconButton.displayName = \"IconButton\";\r\n"],"names":["IconButton","React.forwardRef","props","ref","ariaLabel","children","className","content","disabled","size","variant","rest","iconSizeNumber","jsxs","classNames","styles","jsx","Ripple","React.cloneElement"],"mappings":"2bAwDaA,EAAaC,EAGxB,WAAA,CAACC,EAAOC,IAAQ,CACV,KAAA,CACJ,UAAAC,EAAY,cACZ,SAAAC,EACA,UAAAC,EACA,QAAAC,EACA,SAAAC,EAAW,GACX,KAAAC,EAAO,SACP,QAAAC,EAAU,UACV,GAAGC,CACD,EAAAT,EAEEU,EACJH,IAAS,SAAW,GAAKA,IAAS,QAAU,GAAK,GAGjD,OAAAI,EAAC,SAAA,CACC,aAAYT,EACZ,UAAWU,EACTR,EACAD,GAAYU,EAAO,SACnBP,GAAYO,EAAO,SACnBA,EAAO,WACPN,IAAS,SAAWM,EAAO,MAC3BN,IAAS,UAAYM,EAAO,OAC5BN,IAAS,SAAWM,EAAO,MAC3BL,IAAY,WAAaK,EAAO,QAChCL,IAAY,aAAeK,EAAO,SACpC,EACA,SAAAP,EACA,IAAAL,EACC,GAAGQ,EAEH,SAAA,CAAA,CAACH,GAAaQ,EAAAC,EAAA,CAAO,SAAU,IAAM,SAAS,SAAS,EACvDV,EACGW,EAAM,aAAaX,EAAS,CAC1B,KAAMK,CACP,CAAA,EACDP,CAAA,CAAA,CAAA,CAGV,CAAC,EAEDL,EAAW,YAAc"}