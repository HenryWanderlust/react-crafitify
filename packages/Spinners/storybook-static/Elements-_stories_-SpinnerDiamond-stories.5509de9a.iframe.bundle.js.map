{"version":3,"file":"Elements-_stories_-SpinnerDiamond-stories.5509de9a.iframe.bundle.js","mappings":";;;;;;;;;;AA6CA;;;;AAJA;;AAQA;;AAEA;AAGA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AAIA","sources":["webpack://react-craftify-spinners/./src/Elements/SpinnerDiamond.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react';\r\nimport { defaultProps, SpinnerProps } from '../helpers';\r\nimport { SpinnersProps, withSharedProps } from '../withSharedProps';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst coords = [\r\n  { x: 22, y: -20 },\r\n  { x: 29, y: 0 },\r\n  { x: 22, y: 20 },\r\n  { x: 0, y: 30 },\r\n  { x: -23, y: 20 },\r\n  { x: -30, y: 0 },\r\n  { x: -23, y: -20 },\r\n  { x: 0, y: -30 },\r\n];\r\n\r\nexport type SpinnerDottedProps = SpinnersProps & SpinnerProps;\r\n\r\nconst spinAnimationCenter = keyframes`\r\n  0%, 15%, 85%, 100% {\r\n    transform: scale(0);\r\n  }\r\n  40%, 50% {\r\n    transform: scale(1);\r\n  }\r\n  84% {\r\n    transform: scale(0.45);\r\n  }\r\n`;\r\n\r\nconst spinAnimationShrink = keyframes`\r\n  50% {\r\n    transform: translate(0, 0);\r\n  }\r\n`;\r\n\r\nconst generateCircleStyle = (i: number, duration: number): CSSProperties => ({\r\n  animation: `spinners-react-dotted-shrink ${duration}s cubic-bezier(0, 0.9, 0, 0.9) ${(duration / 20) * i}s infinite`,\r\n});\r\n\r\nconst centerStyle: CSSProperties = {\r\n  animation: `spinners-react-dotted-center ${duration}s ease-out infinite`,\r\n  transformOrigin: 'center',\r\n};\r\n\r\nconst StyledSvg = styled.svg`\r\n  fill: none;\r\n`;\r\n\r\nconst StyledCircle = styled.circle<SpinnerDottedProps>`\r\n  fill: currentColor;\r\n  transform: translate(${props => props.x}px, ${props => props.y}px);\r\n`;\r\n\r\nconst StyledCenterCircle = styled(StyledCircle)<SpinnerDottedProps>`\r\n  transform: translate(${props => props.x}px, ${props => props.y}px);\r\n  animation: ${spinAnimationCenter} ${props => props.duration}s ease-out infinite;\r\n  transform-origin: center;\r\n  display: ${props => (props.still ? 'none' : 'initial')};\r\n`;\r\n\r\nconst StyledAnimatedCircle = styled(StyledCircle)<SpinnerDottedProps>`\r\n  transform: translate(${props => props.x}px, ${props => props.y}px);\r\n  animation: ${props =>\r\n    !props.still ? css`spinners-react-dotted-shrink ${props.duration}s cubic-bezier(0, 0.9, 0, 0.9) ${(props.duration / 20) * props.index}s infinite` : 'none'};\r\n`;\r\n\r\nconst Component: React.FC<SpinnerDottedProps> = ({\r\n  speed,\r\n  still,\r\n  thickness,\r\n  ...svgProps\r\n}: SpinnerDottedProps) => {\r\n  const duration = 200 / speed;\r\n\r\n  return (\r\n    <StyledSvg fill=\"none\" viewBox=\"0 0 66 66\" {...svgProps}>\r\n      {coords.map((c, i) => (\r\n        <StyledAnimatedCircle\r\n          key={`${c.x}-${c.y}`}\r\n          cx=\"33\"\r\n          cy=\"33\"\r\n          r={3 * (thickness / 100)}\r\n          x={c.x}\r\n          y={c.y}\r\n          duration={duration}\r\n          index={i}\r\n          still={still}\r\n        />\r\n      ))}\r\n      <StyledCenterCircle\r\n        cx=\"33\"\r\n        cy=\"33\"\r\n        r={6 * (thickness / 100)}\r\n        x={0}\r\n        y={0}\r\n        duration={duration}\r\n        still={still}\r\n      />\r\n    </StyledSvg>\r\n  );\r\n};\r\n\r\nComponent.defaultProps = defaultProps;\r\n\r\nexport const SpinnerDotted = withSharedProps(Component);\r\n"],"names":[],"sourceRoot":""}