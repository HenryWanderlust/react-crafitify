{"version":3,"file":"Elements-_stories_-LoadingText-stories.7448c21c.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;;;AAQA;;;;;;;;AAQA;AAGA;;;;;;;AASA;AACA;;;AAKA;AACA;;;AAKA","sources":["webpack://react-craftify-spinners/./src/Elements/LoadingText.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst GlitchAnimation = keyframes`\r\n  0% {\r\n    transform: translate(0);\r\n  }\r\n\r\n  20% {\r\n    transform: translate(-3px, 3px);\r\n  }\r\n\r\n  40% {\r\n    transform: translate(-3px, -3px);\r\n  }\r\n\r\n  60% {\r\n    transform: translate(3px, 3px);\r\n  }\r\n\r\n  80% {\r\n    transform: translate(3px, -3px);\r\n  }\r\n\r\n  to {\r\n    transform: translate(0);\r\n  }\r\n`;\r\n\r\nconst ShiftAnimation = keyframes`\r\n  0%, 40%, 44%, 58%, 61%, 65%, 69%, 73%, 100% {\r\n    transform: skewX(0deg);\r\n  }\r\n\r\n  41% {\r\n    transform: skewX(10deg);\r\n  }\r\n\r\n  42% {\r\n    transform: skewX(-10deg);\r\n  }\r\n\r\n  59% {\r\n    transform: skewX(40deg) skewY(10deg);\r\n  }\r\n\r\n  60% {\r\n    transform: skewX(-40deg) skewY(-10deg);\r\n  }\r\n\r\n  63% {\r\n    transform: skewX(10deg) skewY(-5deg);\r\n  }\r\n\r\n  70% {\r\n    transform: skewX(-50deg) skewY(-20deg);\r\n  }\r\n\r\n  71% {\r\n    transform: skewX(10deg) skewY(-10deg);\r\n  }\r\n`;\r\n\r\nconst LoaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #000;\r\n`;\r\n\r\nconst GlitchText = styled.div`\r\n  position: relative;\r\n  font-size: 25px;\r\n  font-weight: 700;\r\n  line-height: 1.2;\r\n  color: #fff;\r\n  letter-spacing: 5px;\r\n  z-index: 1;\r\n  animation: ${ShiftAnimation} 1s ease-in-out infinite alternate;\r\n`;\r\n\r\nconst GlitchEffect = styled.div`\r\n  display: block;\r\n  content: attr(data-glitch);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst GlitchEffectBefore = styled(GlitchEffect)`\r\n  animation: ${GlitchAnimation} 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;\r\n  color: #8b00ff;\r\n  z-index: -1;\r\n`;\r\n\r\nconst GlitchEffectAfter = styled(GlitchEffect)`\r\n  animation: ${GlitchAnimation} 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both infinite;\r\n  color: #00e571;\r\n  z-index: -2;\r\n`;\r\n\r\nconst LoadingText = () => {\r\n  return (\r\n    <LoaderWrapper>\r\n      <GlitchText data-glitch=\"Loading...\">\r\n        <GlitchEffectBefore />\r\n        <GlitchEffectAfter />\r\n        Loading...\r\n      </GlitchText>\r\n    </LoaderWrapper>\r\n  );\r\n};\r\n\r\nexport default LoadingText;\r\n"],"names":[],"sourceRoot":""}